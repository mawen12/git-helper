// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
import {repository} from '../models';

export function AddBranch(arg1:string):Promise<Error>;

export function Commit(arg1:string,arg2:string,arg3:Array<string>):Promise<string>;

export function Commits(arg1:string):Promise<Array<repository.Commit>>;

export function CommitsLog():Promise<Array<repository.Log>>;

export function CreateTag(arg1:string,arg2:string):Promise<string>;

export function CreateTagByCommitId(arg1:string,arg2:string):Promise<string>;

export function DelBranch(arg1:string,arg2:boolean):Promise<string>;

export function DelTag(arg1:string,arg2:boolean):Promise<string>;

export function DiffCommit(arg1:string,arg2:string):Promise<repository.DiffCommitInfo>;

export function DiffWorkStage(arg1:string):Promise<Array<repository.DiffContent>>;

export function DiscardChanges(arg1:string):Promise<string>;

export function FileStatus():Promise<Array<repository.FileStatus>>;

export function GetAllBranch():Promise<Array<repository.Branch>>;

export function GetBranchHash(arg1:string):Promise<string>;

export function GetCurrentBranch():Promise<string>;

export function GetLocalBranch():Promise<Array<repository.Branch>>;

export function GitPull():Promise<string>;

export function GitPush():Promise<string>;

export function IsRemoteRepo():Promise<boolean>;

export function MergeCommit(arg1:string,arg2:string):Promise<string>;

export function MergeRebase(arg1:string,arg2:string):Promise<string>;

export function MergeSquash(arg1:string,arg2:string):Promise<string>;

export function OpenFileManage():Promise<Error>;

export function OpenTerminal():Promise<Error>;

export function PreMergeResult(arg1:string,arg2:string):Promise<repository.MergeResult>;

export function RunCmdInRepository(arg1:string,arg2:Array<string>):Promise<string>;

export function SwitchBranch(arg1:string):Promise<boolean>;

export function SwitchRepository(arg1:string):Promise<Error>;

export function Tags():Promise<Array<repository.Tag>>;
